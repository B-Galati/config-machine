---
- name: Add php's ppa
  become: true
  apt_repository:
    repo: ppa:ondrej/php

- name: Install php 7.2 packages
  become: true
  apt:
    name: '{{ packages }}'
    update_cache: yes
    cache_valid_time: 3600
  vars:
    packages:
      - php7.2-cli
      - php-redis
      - php-mysql
      - php-pgsql
      - php-gd
      - php-xdebug
      - phpmd
      - php7.2-common
      - php7.2-curl
      - php7.2-zip
      - php7.2-json
      - php7.2-mbstring
      - php7.2-opcache
      - php7.2-readline
      - php7.2-sqlite3
      - php7.2-xml

- name: Install php 7.4 packages
  become: true
  apt:
    name: '{{ packages }}'
    update_cache: yes
    cache_valid_time: 3600
  vars:
    packages:
      - php7.4-cli
      - php7.4-opcache
      - php7.4-common
      - php7.4-amqp
      - php7.4-curl
      - php7.4-fpm
      - php7.4-intl
      - php7.4-json
      - php7.4-mbstring
      - php7.4-pgsql
      - php7.4-mysql
      - php7.4-redis
      - php7.4-readline
      - php7.4-sqlite3
      - php7.4-xml
      - php7.4-xdebug
      - php7.4-zip

- name: Correct PHP version selected
  become: true
  alternatives:
    name: php
    path: /usr/bin/php7.4

- name: Import role geerlingguy.composer
  import_role:
    name: geerlingguy.composer
  vars:
    composer_home_path: '~/.composer'
    composer_path: /usr/local/bin/composer
    composer_add_to_path: true
    composer_home_owner: '{{ ansible_user }}'
    composer_home_group: '{{ ansible_user }}'
    composer_keep_updated: true

- name: Ensure /etc/profile.d/composer.sh file is present
  become: true
  copy:
      content: |
        export PATH="${PATH}:~/.composer/vendor/bin"
      dest: /etc/profile.d/composer.sh
      mode: 0644

- name: Write /etc/php/{{ item }}/conf.d/99-custom.ini file
  become: true
  copy:
    dest: /etc/php/{{ item }}/conf.d/99-custom.ini
    content: |
      [PHP]
      error_reporting = E_ALL
      display_errors = On
      display_startup_errors = On
      log_errors = Off
      #log_errors_max_len = 1024
      report_memleaks = On
      default_charset = "UTF-8"
      #auto_prepend_file = ${HOME}/.composer/vendor/autoload.php

      [Date]
      date.timezone = Europe/Paris
  with_items:
    - 7.2/cli
    - 7.4/cli
    - 7.4/fpm

- name: Php | Disable xdebug
  become: true
  shell: phpdismod xdebug

- name: Symfony | Check for existing Symfony bin
  stat:
    path: '~/.symfony/bin/symfony'
  register: symfony_install
  changed_when: False

- block:
    - name: Symfony | Install Symfony CLI
      shell: wget https://get.symfony.com/cli/installer -O - | bash
  when: not symfony_install.stat.exists

- name: Symfony | Add symfony bin to PATH
  become: true
  copy:
    dest: /etc/profile.d/symfony.sh
    mode: 0644
    content: |
      export PATH="${PATH}:${HOME}/.symfony/bin"

#- name: phive | Check for existing phive bin
#  stat:
#    path: '/usr/local/bin/phive'
#  register: phive_install
#  changed_when: False
#
#- block:
#    - name: phive | Download phive phar
#      get_url:
#        url: https://phar.io/releases/phive.phar
#        dest: /tmp/phive.phar
#        force: yes
#
#    - name: phive | Download phive gpg key
#      get_url:
#        url: https://phar.io/releases/phive.phar.asc
#        dest: /tmp/phive.phar.asc
#        force: yes
#
#    - name: phive | Add GPG key
#      shell: gpg --keyserver keys.gnupg.net --recv-keys 0x9D8A98B29B2D5D79
#
#    - name: phive | Verify GPG archive
#      shell: gpg --verify /tmp/phive.phar.asc /tmp/phive.phar
#
#    - name: phive | Install phive
#      copy:
#        src: /tmp/phive.phar
#        dest: /usr/local/bin/phive
#        mode: 0755
#  when: not phive_install.stat.exists
#
#- name: phive | Self update
#  shell: phive selfupdate
#  register: phive_selfupdate
#  changed_when: "'Downloading' in phive_selfupdate.stdout"
#
#- name: phive | Update repository list
#  shell: phive update-repository-list
#  register: phive_update_repo_list
#  changed_when: "'Downloading' in phive_update_repo_list.stdout"
#
##- name: phive | Import gpg keys manually in phive because of issue https://github.com/phar-io/phive/issues/175
##  shell: GNUPGHOME=~/.phive/gpg gpg --keyserver keys.gnupg.net --recv-keys
##  register: phive_import_gpg_keys
##  changed_when: "'imported:' in phive_update_repo_list.stdout"
#
#- name: phive | Intall packages
#  shell: phive install --trust-gpg-keys 8E730BA25823D8B5,4AA394086372C20A,2A8299CE842DD38C,C5095986493B4AA0,8E730BA25823D8B5,E82B2FB314E9906E,AFA6EAAB339B841E,D2CCAC42F6295E7D,CF1A108D0E7AE720 -g {{ item }}
#  register: phive_install
#  with_items:
#    - phpunit
#    - infection
#    - php-cs-fixer
#    - phpstan
#    - phan
#    - composer-require-checker
#    - php-coveralls
#    - phploc
#    - phpcpd
#  changed_when: "'Downloading' in phive_install.stdout"
#
#- name: phive | Update packages
#  shell: (cd ~/.phive;phive update)
#  register: phive_update
#  changed_when: "'Downloading' in phive_update.stdout"

- name: Composer global update
  shell: composer global update
  register: composer_update_global
  changed_when: "'Installing' in composer_update_global.stdout"
